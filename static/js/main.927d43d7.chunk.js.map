{"version":3,"sources":["p2-homeworks/h2/Affairs.module.scss","p2-homeworks/h1/Message.module.scss","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","content","name","messageValue","svg","width","height","d","text","time","messageData","HW1","console","log","Affair","pr","affair","affairBlock","priority","low","middle","high","btnDelete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","affairs","sortButton","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.927d43d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__30Tae\",\"affair\":\"Affairs_affair__2CIzy\",\"affairBlock\":\"Affairs_affairBlock__6TStM\",\"low\":\"Affairs_low__aGbCg\",\"middle\":\"Affairs_middle__23DQ5\",\"high\":\"Affairs_high__1fYyL\",\"btnDelete\":\"Affairs_btnDelete__2djaC\",\"sortButton\":\"Affairs_sortButton__1oq3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__32h09\",\"content\":\"Message_content__2xr1Y\",\"svg\":\"Message_svg__2a5jg\",\"name\":\"Message_name__1t7Yq\",\"messageValue\":\"Message_messageValue__2zKSB\",\"text\":\"Message_text__1dVys\",\"time\":\"Message_time__2kWLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__oqyOk\"};","import React from 'react'\r\nimport s from './Message.module.scss'\r\n\r\ntype MessagePropsType = {\r\n   avatar: string\r\n   name: string\r\n   message: string\r\n   time: string\r\n\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n   return (\r\n      <div className={s.message}>\r\n         <img src={props.avatar} alt=\"avatar\"/>\r\n         <div className={s.content}>\r\n            <div className={s.name}>\r\n               <p>\r\n                  {props.name}\r\n               </p>\r\n            </div>\r\n            <div className={s.messageValue}>\r\n               <div className={s.svg}>\r\n                  <svg width=\"9\" height=\"20\">\r\n                        <path\r\n                           d=\"M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z\"\r\n                           />\r\n                  </svg>\r\n               </div>\r\n               <p className={s.text}>\r\n                  {props.message}\r\n               </p>\r\n               <p className={s.time}>\r\n                  {props.time}\r\n               </p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'Hello!',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n           homework 1\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from './HW2'\r\nimport s from './Affairs.module.scss'\r\n\r\ntype AffairPropsType = {\r\n   affair: AffairType\r\n   deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nconst classPriority = (pr: string) => {\r\n   if (pr === 'low') {\r\n      return s.low\r\n   } else if (pr === 'middle') {\r\n      return s.middle\r\n   } else {\r\n      return s.high\r\n   }\r\n}\r\n\r\nconsole.log(s)\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n   const deleteCallback = () => props.deleteAffairCallback(props.affair._id)// need to fix\r\n\r\n   return (\r\n      <div className={s.affair}>\r\n         <div className={s.affairBlock}>\r\n            <p>{props.affair.name}</p>\r\n         </div>\r\n         <div className={s.affairBlock}>\r\n            <p className={classPriority(props.affair.priority)}>[{props.affair.priority}]</p>\r\n         </div>\r\n         <div className={s.btnDelete}>\r\n            <button onClick={deleteCallback}>x</button>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.scss'\r\n\r\ntype AffairsPropsType = {\r\n   data: Array<AffairType>\r\n   setFilter: (filter: FilterType) => void\r\n   deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n   const mappedAffairs = props.data.map((a: AffairType) => (\r\n      <Affair // should work\r\n         key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n         affair={a}\r\n         deleteAffairCallback={props.deleteAffairCallback}\r\n      />\r\n   ))\r\n\r\n   const setAll = () => props.setFilter('all')\r\n   const setHigh = () => props.setFilter('high')\r\n   const setMiddle = () => props.setFilter('middle')\r\n   const setLow = () => props.setFilter('low')\r\n\r\n   return (\r\n      <div className={s.affairs}>\r\n\r\n         {mappedAffairs}\r\n\r\n         <div className={s.sortButton}>\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n\r\n// types\r\nexport type AffairPriorityType = string\r\nexport type AffairType = {\r\n   _id: number\r\n   name: string\r\n   priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n   {_id: 1, name: 'React', priority: 'high'},\r\n   {_id: 2, name: 'anime', priority: 'low'},\r\n   {_id: 3, name: 'games', priority: 'low'},\r\n   {_id: 4, name: 'work', priority: 'high'},\r\n   {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n   if (filter === 'all') {\r\n      return affairs\r\n   } else if (filter === 'low') {\r\n      return affairs.filter(a => a.priority === 'low')\r\n   } else if (filter === 'high') {\r\n      return affairs.filter(a => a.priority === 'high')\r\n   } else {\r\n      return affairs.filter(a => a.priority === 'middle')\r\n   }\r\n\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n   return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n   const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n   const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n   const filteredAffairs = filterAffairs(affairs, filter)\r\n   const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n   return (\r\n      <div>\r\n         <hr/>\r\n         homeworks 2\r\n         <Affairs\r\n            data={filteredAffairs}\r\n            setFilter={setFilter}\r\n            deleteAffairCallback={deleteAffairCallback}\r\n         />\r\n         <hr/>\r\n         <hr/>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\n\r\nfunction App() {\r\n   return (\r\n      <div className={s.App}>\r\n         <div>react homeworks:</div>\r\n         <HW1/>\r\n         <HW2/>\r\n         {/*<HW3/>*/}\r\n         {/*<HW4/>*/}\r\n         {/*<HW5/>*/}\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <App/>\r\n   </React.StrictMode>,\r\n   document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}